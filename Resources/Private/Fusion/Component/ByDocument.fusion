prototype(Garagist.ImageDirectory:ByDocument) < prototype(Neos.Fusion:Component) {
    @propTypes {
        prefixCopyright = ${PropTypes.string}
        defaultCopyright = ${PropTypes.string}
        imageWidth = ${PropTypes.integer}
    }

    rawList = Garagist.ImageDirectory:Helper.RawList {
        sortBy = 'document'
    }

    node = ${node}

    prefixCopyright = ${q(this.node).property('imageDirectoryPrefixCopyright')}
    defaultCopyright = ${q(this.node).property('imageDirectoryDefaultCopyright')}
    imageWidth = ${q(this.node).property('imageDirectoryImageWidth')}

    renderer = Neos.Fusion:Map {
        @process.filter = ${Array.filter(value)}
        items = ${props.rawList}
        itemRenderer = Garagist.ImageDirectory:Helper.DocumentDataStructure {
            document = ${item}
            assets = Neos.Fusion:Map {
                @process.filter = ${Array.filter(value)}
                items = ${item.assets}
                itemRenderer = Garagist.ImageDirectory:Helper.AssetDataStructure {
                    asset = ${item}
                    prefixCopyright = ${props.prefixCopyright}
                    defaultCopyright = ${props.defaultCopyright}
                    imageWidth = ${props.imageWidth}
                }
            }
        }
    }
}
